#!/bin/sh
set -euf

##
# GPG generate key with our typical settings.
#
# This command prints our typical steps to set up a GPG key for an email address.
#
# We prefer a file name convention that uses the email address,
# an equal sign as a separator, and then an explanation:
#
#     alice@example.com=pgp-public-key.txt
#
#     alice@example.com=pgp-private-key.txt
#
# Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
# License: GPL
# Created: 2015-01-25
# Updated: 2020-03-23
##

email=${1-"alice@example.com"}

cat <<EOF

Create a GPG key with our typical settings for OpenPGP:

    gpg --full-gen-key --openpgp

Choose RSA and RSA; this is typically the default.

Choose 4096 bits; this is typically the strongest.

Choose expiration date in one year; this is to be safe.

Choose a long complex password that you do not use elsewhere.

To list:

    gpg --list-key $email

To export your public key and private key, using ASCII armor:

    gpg --export --armor $email

    gpg --export-secret-key --armor $email

To export your public key and private key, using base64 encoding:

    gpg --export $email | base64

    gpg --export-secret-key $email | base64

To export using our file name convention:

    gpg --export --armor $email > $email=pgp-public-key.asc

    gpg --export-secret-key --armor  $email > $email=pgp-private-key.asc

    gpg --export $email | base64 > $email=pgp-public-key.base64

    gpg --export-secret-key $email | base64 > $email=pgp-private-key.base64

You can send your public key to anyone.

You must keep your private key secret.

EOF

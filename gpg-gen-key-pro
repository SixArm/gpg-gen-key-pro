#!/bin/sh
set -euf

##
# GPG generate key with our typical settings.
#
# This command prints our typical steps to set up a GPG key for an email address.
#
# We prefer a file name convention that uses the email address,
# an equal sign as a separator, and then an explanation:
#
#     alice@example.com=pgp-public-key-block.txt
#
#     alice@example.com=pgp-private-key-block.txt
#
# Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
# License: GPL
# Created: 2015-01-25
# Updated: 2020-03-23
##

email=${1-"alice@example.com"}

cat <<EOF

## How to create a key

Create a GPG key with our typical settings for OpenPGP:

    gpg --full-gen-key --openpgp

Choose RSA and RSA; this is typically the default.

Choose 4096 bits; this is typically the strongest.

Choose expiration date in one year; this is to be safe.

Choose a long complex password that you do not use elsewhere.

To list:

    gpg --list-key $email


## How to export

To export your public key using ASCII armor block:

    gpg --export --armor $email

To export your private key using ASCII armor:

    gpg --export-secret-key --armor $email

To generate a recovation certification:

    gpg  --gen-revoke --armor $email


## Export alternatives

To export your public key or private key using base64 encoding:

    gpg --export $email | base64

    gpg --export-secret-key $email | base64


## Helpers

To transform a PGP ASCII armor key file `example.txt` to base64:

    cat example.txt | sed '/^$/d; /^[-=]/d;'

To transform a PGP ASCII armor key file `example.txt` to base64 without spaces:

    cat example.txt | sed '/^$/d; /^[-=]/d;' | tr -d '[:space:]'


## File name convention

Our file name convention for ASCII armor block files:

    $email=$id=pgp-public-key-block.txt
    $email=$id=pgp-private-key-block.txt
    $email=$id=pgp-revocation-block.txt

Our file name convention for base64 multi-line files:

    $email=$id=pgp-public-key-base64.txt
    $email=$id=pgp-private-key-base64.txt
    $email=$id=pgp-revocation-base64.txt

Our file name convention for base64 mono-line files:

    $email=$id=pgp-public-key-base64-line.txt
    $email=$id=pgp-private-key-base64-line.txt
    $email=$id=pgp-revocation-base64-line.txt


## What's next

You can send your public key to anyone.

You must keep your private key secret.

EOF
